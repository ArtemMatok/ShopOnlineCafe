@using ShopOnlineCafe.Client.Authentication
@inject NavigationManager navManager
@inject AuthenticationStateProvider authProvider
@inject ISyncLocalStorageService _localService
@implements IDisposable
@inject ICartService _cartService

<section class="flex">
        <NavLink href="">
            <a  class="logo">yum-yum 😋</a>
        </NavLink>
        <nav class="navbar @navClass">
            <NavLink href="">
                <a>home</a>
            </NavLink>
            <NavLink href="about">
                <a>about</a>
            </NavLink>
            <AuthorizeView Roles="User">
                <Authorized>
                    <NavLink href="menu">
                        <a>menu</a>
                    </NavLink>
                </Authorized>
                <NotAuthorized>

                    <NavLink href="unauthorize">
                        <a>menu</a>
                    </NavLink>
                </NotAuthorized>
            </AuthorizeView>
            <AuthorizeView Roles="Admin">
                <Authorized>
                    <NavLink href="ordersAll">
                        <a>orders</a>
                    </NavLink>
                </Authorized>
            </AuthorizeView>
            <AuthorizeView Roles="User">
                <Authorized>
                    <NavLink href="order">
                        <a>orders</a>
                    </NavLink>
                </Authorized>
            </AuthorizeView>
          

            <AuthorizeView Roles="Admin">
                <Authorized>
                    <NavLink href="createFood">
                        <a>Create food</a>
                    </NavLink>
                </Authorized>
            </AuthorizeView>
            <AuthorizeView Roles="Admin">
                <Authorized>
                    <NavLink href="edit">
                        <a>Edit food</a>
                    </NavLink>
                </Authorized>
            </AuthorizeView>
        </nav>

        <div class="icons">
            <AuthorizeView Roles="User,Admin">
                <Authorized>
                    <NavLink href="cart">
                        <a><i class="fas fa-shopping-cart"></i><span>@GetProductCount()</span></a>
                    </NavLink>
                </Authorized>
            </AuthorizeView>
            <div @onclick="ClickProfile" id="user-btn" class="fas fa-user"></div>
            <div @onclick="ClickNavbar" id="menu-btn" class="fas fa-bars"></div>
        </div>

        <div class="profile @profileClass">
            <AuthorizeView Roles="User">
                <Authorized>
                    <div class="flex">

                        <a @onclick="Logout" href="javascript:void(0)" class="delete-btn">logout</a>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <p class="account">


                        <NavLink href="login">
                            <a>login</a>
                        </NavLink>
                        or
                        <NavLink href="register">
                            <a>register</a>
                        </NavLink>
                    </p>
                </NotAuthorized>
            </AuthorizeView>
            @*<AuthorizeView>
                    <Authorized>
                        <div>
                            <a @onclick="Logout" href="javascript:void(0)" class="delete-btn">logout</a>
                        </div>
                    </Authorized>
                    <NotAuthorized>
                        <p class="account">
                            <NavLink href="login">
                                <a>login</a>
                            </NavLink>
                            or
                            <a href="#">register</a>
                        </p>
                    </NotAuthorized>
                </AuthorizeView>*@
        </div>

</section>
@code {
    #region Menu
    private bool isMenu = false;
    private string? navClass => isMenu ? "active" : "";

    private void ClickNavbar()
    {
        isMenu = !isMenu;
        Console.WriteLine("Click");
        isProfile = false;
    }
    #endregion

    #region Profile
    private bool isProfile = false;
    private string profileClass => isProfile ? "active" : "";

    private void ClickProfile()
    {
        isProfile = !isProfile;
        isMenu = false;
    }
    #endregion


    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProcider)authProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        navManager.NavigateTo("/", true);
    }


    protected override void OnInitialized()
    {
        _cartService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        _cartService.OnChange -= StateHasChanged;
    }



    private int GetProductCount()
    {
        var cart = _localService.GetItem<List<Food>>("cart");

        return cart != null ? cart.Count() : 0;
    }

}


